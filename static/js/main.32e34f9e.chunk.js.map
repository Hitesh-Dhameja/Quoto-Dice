{"version":3,"sources":["components/CardAll.jsx","App.js","index.js"],"names":["CardAll","quotes","getQuote","tweetQuote","classes","makeStyles","theme","root","maxWidth","left","top","position","transform","media","height","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","cards","boxShadow","useStyles","Card","className","CardHeader","Avatar","action","IconButton","title","author","subheader","dateAdded","CardMedia","image","CardContent","Typography","variant","color","component","style","fontWeight","content","CardActions","disableSpacing","onClick","Button","App","useState","setQuotes","fetch","then","response","json","data","useEffect","twitterUrl","window","open","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXAiGeA,MAhFf,YAAoD,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAiC3BC,EAhCYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,IACVC,KAAM,MACNC,IAAK,MACLC,SAAU,WACVC,UAAW,iCAIfC,MAAO,CACHC,OAAQ,EACRC,WAAY,UAEhBC,OAAQ,CACJJ,UAAW,eACXK,WAAY,OACZC,WAAYZ,EAAMa,YAAYC,OAAO,YAAa,CAC9CC,SAAUf,EAAMa,YAAYE,SAASC,YAG7CC,WAAY,CACRX,UAAW,kBAEfY,OAAQ,CACJC,gBAAiBC,IAAI,MAEzBC,MAAO,CACHC,UAAW,+DACXV,WAAY,0CAGJW,GAChB,OACI,8BACI,eAACC,EAAA,EAAD,CAAMC,UAAS,UAAK3B,EAAQG,KAAb,YAAqBH,EAAQuB,MAA7B,aAAf,UACI,cAACK,EAAA,EAAD,CAAYR,OACR,cAACS,EAAA,EAAD,CAAQ,aAAW,SAASF,UAAW3B,EAAQoB,SAI/CU,OACI,cAACC,EAAA,EAAD,CAAY,aAAW,WAAvB,SACI,cAAC,IAAD,MAGRC,MAAOnC,EAAOoC,OACdC,UAAWrC,EAAOsC,YAEtB,cAACC,EAAA,EAAD,CACIT,UAAW3B,EAAQS,MACnB4B,MAAM,sGACNL,MAAM,gBAEV,cAACM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,IAAIC,MAAO,CAAEC,WAAY,QAArF,SACK/C,EAAOgD,YAGhB,eAACC,EAAA,EAAD,CAAaC,gBAAc,EAA3B,UACI,cAAChB,EAAA,EAAD,CAAY,aAAW,mBAAmBY,MAAO,CAAEF,MAAO,OAA1D,SACI,cAAC,IAAD,MAEJ,cAACV,EAAA,EAAD,CAAY,aAAW,QAAQU,MAAM,UAArC,SACI,cAAC,IAAD,CAAaO,QAASjD,MAE1B,cAACkD,EAAA,EAAD,CAAQT,QAAQ,YAAYC,MAAM,UAAUO,QAASlD,EAAU6C,MAAO,CAAE9B,WAAY,SAApF,4BC7CLqC,MAnCf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOtD,EAAP,KAAeuD,EAAf,KAGMtD,EAAW,WACfuD,MAHU,kCAIPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUL,EAAUK,OAiB9B,OAdAC,qBAAU,WACR5D,MACC,IAWoCD,EAA/BgD,QAA+BhD,EAAtBoC,OAAsBpC,EAAdsC,UAEvB,sBAAKR,UAAU,MAAf,UACE,8BACE,oBAAIgB,MAAO,CAAEF,MAAO,QAApB,0BAEF,cAAC,EAAD,CAAS5C,OAAQA,EAAQC,SAAUA,EAAUC,WAX9B,WACjB,IAAM4D,EAAU,gDAA4C9D,EAAOgD,QAAnD,cAAgEhD,EAAOoC,QACvF2B,OAAOC,KAAKF,EAAY,iBCpB5BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.32e34f9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nfunction CardAll({ quotes, getQuote, tweetQuote }) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            maxWidth: 345,\r\n            left: '38%',\r\n            top: '20%',\r\n            position: 'absolute',\r\n            transform: 'translate( - 50 % ,  - 50 % )',\r\n\r\n        },\r\n\r\n        media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n        },\r\n        expand: {\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n        avatar: {\r\n            backgroundColor: red[500],\r\n        },\r\n        cards: {\r\n            boxShadow: '0 19px 38px rgba(0,33,0,0.30), 0 15px 12px rgba(0,0,33,0.22)',\r\n            transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Card className={`${classes.root} ${classes.cards} 'card-1'`}>\r\n                <CardHeader avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n\r\n                    </Avatar>\r\n                }\r\n                    action={\r\n                        <IconButton aria-label=\"settings\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                    title={quotes.author}\r\n                    subheader={quotes.dateAdded}\r\n                />\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQYBqgHM0qX3y-sjP3aBFjpcyZVuBSzu4KARQ&usqp=CAU\"\r\n                    title=\"Paella dish\"\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ fontWeight: 'bold' }}>\r\n                        {quotes.content}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"add to favorites\" style={{ color: 'red' }}>\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"tweet\" color='primary'>\r\n                        <TwitterIcon onClick={tweetQuote} />\r\n                    </IconButton>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={getQuote} style={{ marginLeft: '100px' }}>Quote</Button>\r\n\r\n\r\n                </CardActions>\r\n\r\n            </Card>\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CardAll\r\n","import './App.css';\nimport CardAll from './components/CardAll';\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n\n  const [quotes, setQuotes] = useState([]);\n  const url = \"https://api.quotable.io/random\";\n  //Fetch Quotes from API\n  const getQuote = () => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => setQuotes(data));\n  };\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  const getNewQuote = () => {\n    getQuote();\n  };\n\n  const tweetQuote = () => {\n    const twitterUrl = `https://twitter.com/intent/tweet?text=${quotes.content} - ${quotes.author}`;\n    window.open(twitterUrl, \"_blank\");\n  };\n\n  const { content, author, dateAdded } = quotes;\n  return (\n    <div className=\"App\">\n      <div>\n        <h1 style={{ color: 'blue', }}>Quoto-Dice</h1>\n      </div>\n      <CardAll quotes={quotes} getQuote={getQuote} tweetQuote={tweetQuote} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}